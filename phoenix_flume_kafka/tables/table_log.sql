CREATE TABLE IF NOT EXISTS LOG (            --BRO_LOG
      TIPO					    VARCHAR(4)        ,
      TS           			    TIMESTAMP NOT NULL,
      TS_CODE				    TIMESTAMP NOT NULL,      
      ID_ORIG_H 	 		    VARCHAR           ,
      ID_ORIG_P 	 	   	    UNSIGNED_LONG NOT NULL,
	  ID_RESP_H 	 	   	    VARCHAR           ,
	  ID_RESP_P 	 	   	    UNSIGNED_LONG NOT NULL,
	  PROTO        	    	    VARCHAR           ,
      UID          			    VARCHAR      	  ,        
      ROW_ID   				    UNSIGNED_LONG NOT NULL,

	  "CONN".SERVICE		    VARCHAR,
	  "CONN".DURATION    	    UNSIGNED_LONG,
	  "CONN".ORIG_BYTES 	    UNSIGNED_LONG,
	  "CONN".RESP_BYTES  	    UNSIGNED_LONG,	  
	  "CONN".CONN_STATE	 	    VARCHAR,
	  "CONN".LOCAL_ORIG	 	    BOOLEAN,
	  "CONN".LOCAL_RESP	 	    BOOLEAN,
	  "CONN".MISSED_BYTES	    UNSIGNED_LONG,
	  "CONN".HISTORY		    VARCHAR,
	  "CONN".ORIG_PKTS		    UNSIGNED_LONG,
	  "CONN".ORIG_IP_BYTES	    UNSIGNED_LONG,
	  "CONN".RESP_PKTS		    UNSIGNED_LONG,
	  "CONN".RESP_IP_BYTES      UNSIGNED_LONG,
	  "CONN".TUNNEL_PARENTS     VARCHAR[],
	  "CONN".VLAN 				INTEGER,
	  "CONN".INNER_VLAN			INTEGER,
	  "CONN".ORIG_L2_ADDR		VARCHAR,
	  "CONN".RESP_L2_ADDR		VARCHAR,
          
      "DNS".TRANS_ID	        UNSIGNED_LONG,
      "DNS".RTT 			    DOUBLE,
      "DNS".QUERY  		        VARCHAR,
      "DNS".QCLASS 			    UNSIGNED_LONG,
      "DNS".QCLASS_NAME 	    VARCHAR,
      "DNS".QTYPE 			    UNSIGNED_LONG,
      "DNS".QTYPE_NAME 		    VARCHAR,
	  "DNS".RCODE   		    UNSIGNED_LONG,
	  "DNS".RCODE_NAME 		    VARCHAR,
	  "DNS".AA 				    BOOLEAN,
	  "DNS".TC				    BOOLEAN,
	  "DNS".RD				    BOOLEAN,
	  "DNS".RA				    BOOLEAN,
	  "DNS".Z				    UNSIGNED_LONG,
	  "DNS".ANSWERS			    VARCHAR[],
	  "DNS".TTLS			    DOUBLE[],
	  "DNS".REJECTED   		    BOOLEAN,
	  "DNS".ADDL			    VARCHAR[],
	  "DNS".AUTH			    VARCHAR[],

	  "HTTP".TRANS_DEPTH  		UNSIGNED_LONG,
	  "HTTP".METHOD				VARCHAR,
	  "HTTP".HOST				VARCHAR,
	  "HTTP".URI				VARCHAR,
	  "HTTP".REFERRER			VARCHAR,  
	  "HTTP".VERSION      		VARCHAR,
	  "HTTP".USER_AGENT			VARCHAR,
	  "HTTP".REQUEST_BODY_LEN   UNSIGNED_LONG,
	  "HTTP".RESPONSE_BODY_LEN  UNSIGNED_LONG,
	  "HTTP".STATUS_CODE		UNSIGNED_LONG,
	  "HTTP".STATUS_MSG		    VARCHAR,
	  "HTTP".INFO_CODE		    UNSIGNED_LONG,
	  "HTTP".INFO_MSG			VARCHAR,	 
	  "HTTP".TAGS				VARCHAR[],
	  "HTTP".USERNAME			VARCHAR,
	  "HTTP".PASSWORD			VARCHAR,
	  "HTTP".PROXIED			VARCHAR[],
	  "HTTP".ORIG_FUIDS			VARCHAR[],
	  "HTTP".ORIG_FILENAMES		VARCHAR[],
	  "HTTP".ORIG_MIME_TYPES    VARCHAR[],
	  "HTTP".RESP_FUIDS		    VARCHAR[],
	  "HTTP".RESP_FILENAMES     VARCHAR[],
	  "HTTP".RESP_MIME_TYPES    VARCHAR[],
	  
	  --"SSH".VERSION  			UNSIGNED_LONG,
	  "SSH".VERSION1  			UNSIGNED_LONG,
	  "SSH".AUTH_SUCCESS		BOOLEAN,
	  "SSH".AUTH_ATTEMPTS		UNSIGNED_LONG,
	  "SSH".DIRECTION 			VARCHAR,
	  "SSH".CLIENT				VARCHAR,
	  "SSH".SERVER				VARCHAR,
	  "SSH".CIPHER_ALG			VARCHAR,
	  "SSH".MAC_ALG				VARCHAR,
	  "SSH".COMPRESSION_ALG		VARCHAR,
	  "SSH".KEX_ALG 			VARCHAR,
	  "SSH".HOST_KEY_ALG 		VARCHAR,
	  "SSH".HOST_KEY 			VARCHAR,

	  "DHCP".MAC 			    VARCHAR,
	  "DHCP".ASSIGNED_IP 	    VARCHAR,
	  "DHCP".LEASE_TIME		    UNSIGNED_LONG,
	  "DHCP".TRANS_ID1 		    UNSIGNED_LONG
	  --"DHCP".TRANS_ID 		    UNSIGNED_LONG

      CONSTRAINT PK PRIMARY KEY( TIPO		,
								 TS         ,
								 TS_CODE	,
								 ID_ORIG_H  ,
								 ID_ORIG_P  ,
								 ID_RESP_H  ,
								 ID_RESP_P  ,
								 PROTO      ,
								 UID        ,
								 ROW_ID ));

--Deixar o tipo por primeiro
--construir indices por query e ip de saida
--proxied	SERA que esta  certo 
	
